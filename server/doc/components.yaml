components:
  schemas:
    User:
      type: object
      properties:
        id:
          $ref: "#components/schemas/PrimaryKey"
        email:
          type: string
          format: email
        firstname:
          $ref: "#components/schemas/Firstname"
        lastname:
          $ref: "#components/schemas/Lastname"
        bio:
          type: string
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla fringilla turpis venenatis, ultrices felis quis, consectetur purus cras amet.
          maxLength: 140
        slug:
          $ref: "#components/schemas/Slug"
        avatarUrl:
          $ref: "#components/schemas/URL"
        isAdmin:
          type: boolean
        createdAt:
          $ref: "#components/schemas/DateTZ"
        records:
          type: array
          items:
            $ref: "#components/schemas/Record"
        learnedLanguages:
          $ref: "#components/schemas/Languages"
        taughtLanguages:
          $ref: "#components/schemas/Languages"

    UpdatedUser:
      type: object
      properties:
        email:
          type: string
          format: email
        firstname:
          $ref: "#components/schemas/Firstname"
        lastname:
          $ref: "#components/schemas/Lastname"
        password:
          $ref: "#components/schemas/Password"
        confirm:
          $ref: "#components/schemas/Password"
        bio:
          type: string
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla fringilla turpis venenatis, ultrices felis quis, consectetur purus cras amet.
          maxLength: 140
        learnedLanguages:
          $ref: "#components/schemas/Languages"
        taughtLanguages:
          $ref: "#components/schemas/Languages"

    NewUser:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          $ref: "#components/schemas/Password"
        confirm:
          $ref: "#components/schemas/Password"
        firstname:
          $ref: "#components/schemas/Firstname"
        lastname:
          $ref: "#components/schemas/Lastname"
      required:
        - email
        - password
        - confirm

    LoginForm:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          $ref: "#components/schemas/Password"
      required:
        - email
        - password

    Record:
      type: object
      properties:
        id:
          $ref: "#components/schemas/PrimaryKey"
        url:
          $ref: "#components/schemas/URL"
        createdAt:
          $ref: "#components/schemas/DateTZ"
        englishTranslation:
          $ref: "#components/schemas/Translation"
        translation:
          $ref: "#components/schemas/Translation"

    Languages:
      type: array
      items:
        $ref: "#components/schemas/Language"
      description: An array of languages.

    Language:
      type: object
      properties:
        id:
          $ref: "#components/schemas/PrimaryKey"
        name:
          type: string
          example: english
        code:
          type: string
          example: en
          pattern: "[a-z]{2,4}"

    NewLanguage:
      type: object
      properties:
        name:
          type: string
          example: english
        code:
          type: string
          example: en_US
          pattern: "(^[a-z]{2}$)|(^[a-z]{2}_[A-Z]{2}$)"
          description: Must be [en] or [en_US] format

    NewExpression:
      type: object
      properties:
        label:
          type: string
          example: bjr
      required:
        - label

    UserLanguage:
      type: object
      properties:
        language_id:
          $ref: "#components/schemas/LanguagePk"
        role:
          type: string
          enum: [learner, teacher]
          description: Indicates the type of language, i.e. a learned or a taught one.
      required:
        - language_id
        - role

    Translation:
      type: object
      properties:
        id:
          $ref: "#components/schemas/TranslationPk"
        text:
          type: string
          example: How are you ?
        createdAt:
          $ref: "#components/schemas/DateTZ"
        expression:
          $ref: "#components/schemas/Expression"
        language:
          $ref: "#components/schemas/Language"

    Expression:
      type: object
      properties:
        id:
          $ref: "#components/schemas/PrimaryKey"
        label:
          type: string
          example: "greetings"
        createdAt:
          $ref: "#components/schemas/DateTZ"

    URL:
      type: string
      format: uri
      example: /c/0/f/6/sdfesse55ad54uom8da

    DateTZ:
      type: string
      format: date-time

    PrimaryKey:
      type: integer
      minimum: 1
      example: 24

    TranslationPk:
      allOf:
        - "#components/schemas/PrimaryKey"
        - description: The primary key of the recorded translation.

    LanguagePk:
      allOf:
        - "#components/schemas/PrimaryKey"
        - description: The primary key of the language.

    Firstname:
      type: string
      example: Michael

    Lastname:
      type: string
      example: Rapaport

    Password:
      type: string
      example: mySecuredPa$$word
      format: password

    Slug:
      type: string
      example: michael-rapaport24
      pattern: '[a-z\d]+(-[a-z\d])*'

    JWT:
      type: string
      example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      format: JWT

    Errors:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: "#components/schemas/Error"

    Error:
      type: object
      properties:
        msg:
          type: string
          example: An error has occured

    ID:
      type: object
      properties:
        id:
          type: integer
          example: 24

    Updated:
      type: object
      properties:
        updated:
            type: boolean
            example: true

    Deleted:
      type: object
      properties:
        deleted:
            type: boolean
            example: true

  parameters:
    ExpressionID:
      in: path
      name: id
      schema:
        $ref: "#components/schemas/PrimaryKey"
      required: true
      description: Primary key of the expression.

    TranslationID:
      in: path
      name: id
      schema:
        $ref: "#components/schemas/PrimaryKey"
      required: true
      description: Primary key of the translation.

    UserPk:
      name: id
      schema:
        $ref: "#components/schemas/PrimaryKey"
      required: true
      description: Primary key of the user.

    LanguagePk:
      name: language_id
      schema:
        $ref: "#components/schemas/LanguagePk"
      required: true
      description: Primary key of the language.
    
    LanguageID:
      in: path
      name: id
      schema:
        $ref: "#components/schemas/PrimaryKey"
      required: true
      description: Primary key of the language.

    RecordPk:
      name: language_id
      schema:
        $ref: "#components/schemas/PrimaryKey"
      required: true
      description: Primary key of the record.

  responses:
    BadRequest:
      description: Bad request. Missing parameter(s) or invalid value(s).
      content:
        application/json:
          schema:
            $ref: "#components/schemas/Errors"

    Conflict:
      description: Conflict. Same field(s) already set in database.
      content:
        application/json:
          schema:
            $ref: "#components/schemas/Errors"

    Unauthorized:
      description: Unauthorized. The authentication process failed.
      content:
        application/json:
          schema:
            $ref: "#components/schemas/Errors"

    UserNotFound:
      description: Not Found. No user corresponding to the specified parameter exists in our database.
      content:
        application/json:
          schema:
            $ref: "#components/schemas/Errors"

    RecordNotFound:
      description: Not Found. No record corresponding to the specified parameter exists in our database.
      content:
        application/json:
          schema:
            $ref: "#components/schemas/Errors"

    Created:
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    $ref: "#/components/schemas/PrimaryKey"

    CreatedUser:
      allOf:
        - $ref: "#components/responses/Created"
        - description: Success. Id of the newly created user.

    CreatedLanguage:
      allOf:
        - $ref: "#components/responses/Created"
        - description: Success. Id of the newly created language.

    NoContent:
      description: Success. An empty object.
      content:
        application/json:
          schema:
            type: object

  securitySchemes:
    BearerJWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
